name: "Build & Push All Docker Images to Docker Hub"

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Push Docker Images and Push to GitOps
    runs-on: [self-hosted, linux]
    env:
      version: ${{ github.sha }}
      SERVICES: "serverless mina-service"
      SERVICES_BUILD: "serverless mina-service"
      DOCKER_REPOS: "orochinetwork/zkdb-serverless orochinetwork/zkdb-mina-service"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build & Push Docker Images
        run: |
          IFS=' ' read -r -a DOCKER_REPOS <<< "${{env.DOCKER_REPOS}}"
          IFS=' ' read -r -a SERVICES_BUILD <<< "${{env.SERVICES_BUILD}}"
          
          for i in ${!SERVICES_BUILD[@]}; do
            SERVICE_BUILD="${SERVICES_BUILD[$i]}"
            DOCKER_REPO="${DOCKER_REPOS[$i]}"
            
            echo "Building and pushing $SERVICE_BUILD..."
            echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_ACCESS_TOKEN }}" > npm-token 

            # Build the Docker image with a valid tag
            docker build -t "$DOCKER_REPO:latest" \
              -f "packages/$SERVICE_BUILD/Dockerfile" \
              --secret id=npm,src=./npm-token \
              --platform=linux/amd64 .

            docker tag "$DOCKER_REPO:latest" "$DOCKER_REPO:${{ env.version }}"
            docker push "$DOCKER_REPO:latest"
            docker push "$DOCKER_REPO:${{ env.version }}"

          done

  gitops-push:
    name: Push Changes to GitOps
    needs: build
    runs-on: [self-hosted, linux]
    env:
      version: ${{ github.sha }}
      gitopsbranch: main
    steps:
      - name: Push changes to GitOps
        run: |
          eval $(ssh-agent -s)
          echo "${{ secrets.SSH_KEY }}" | tr -d '\r' | ssh-add - > /dev/null 2>&1
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts

          git config --global user.name "${{ secrets.GITOPS_USER }}"
          git config --global user.email "${{ secrets.GITOPS_EMAIL }}"
          git clone ${{ secrets.GITOPS_REPO }}

          cd test-argo-cd
          git checkout ${{ env.gitopsbranch }}
          CHANGED_SERVICES_ARRAY=("serverless" "mina-service")

          for SERVICE in "${CHANGED_SERVICES_ARRAY[@]}"; do
            VALUES_PATH="services/orochi/zkDatabase/$SERVICE/zkdb-$SERVICE/values.yaml"
            sed -i "s| tag: .*| tag: ${{ env.version }}|" "$VALUES_PATH"
            git add "$VALUES_PATH"
          done

          echo "Committing and pushing changes for ${CHANGED_SERVICES_ARRAY[*]} to ${{ env.gitopsbranch }} version ${{ env.version }}"
          git commit -m "Update versions for: ${CHANGED_SERVICES_ARRAY[*]} to ${{ env.version }}"
          git push origin ${{ env.gitopsbranch }}
